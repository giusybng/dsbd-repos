version: '3.4'
x-xxx-common-services-config: &common-services-config
  restart: always

x-kafka-env: &kafka-env
  KAFKA_BROKER_ID: 1
  KAFKA_ADVERTISED_PORT: 9092
  BROKER_ID_COMMAND: "hostname | cut -d'-' -f2"
  KAFKA_ZOOKEEPER_CONNECT: "zoo:2181"
  KAFKA_CREATE_TOPICS: "logging:20:1,pushnotifications:10:1,invoicing:10:1,userupdates:10:1,orderupdates:10:1"
  KAFKA_LISTENERS: "PLAINTEXT://:9092"

networks:
    loggingsystem-network:
        driver: bridge

services:

    loggingsystem:

        image: loggingsystem:v1
        container_name: loggingsystem-container

        build:
            context: ../loggingsystem
            dockerfile: Dockerfile-dev

        ports:
          - "8080:8080"

        environment:
            MONGO_ROOT_USERNAME: admin
            MONGO_ROOT_PASSWORD: admin
            MONGO_AUTH_DB: admin
            MONGO_HOST: mongodb
            MONGO_PORT: 27017
            MONGO_DB_NAME: loggingdb

        depends_on:
          - mongodb

        networks:
            loggingsystem-network:


    mongodb:

      image: mongo:latest

      container_name: mongo-container

      restart: always

      ports:
        - "27017:27017"

      environment:
        MONGO_INITDB_ROOT_USERNAME: admin
        MONGO_INITDB_ROOT_PASSWORD: admin

      volumes:
        - ./.docker/mongodb/mongod.conf:/etc/mongod.conf
        - ./.docker/mongodb/initdb.d/:/docker-entrypoint-initdb.d/
        - ./.docker/mongodb/data/db/:/data/db/
        - ./.docker/mongodb/data/log/:/var/log/mongodb/

      networks:
          loggingsystem-network:


    zoo:
      <<: *common-services-config
      image: library/zookeeper:3.4.13
      environment:
        ZOO_MY_ID: 1
      ports:
        - "2181:2181"
      networks:
        loggingsystem-network:

    kafka:
      <<: *common-services-config
      environment: *kafka-env
      image: wurstmeister/kafka
      ports:
        - "9092:9092"
      networks:
        loggingsystem-network:

    debug-container:
      build:
        context: ../fakeproducer
        dockerfile: Dockerfile
      command: exit 0
      networks:
        loggingsystem-network: